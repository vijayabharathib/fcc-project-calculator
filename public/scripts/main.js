document.addEventListener("DOMContentLoaded",function(e){function t(e,t){var r=e;switch(t){case"0":case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":r=s?t:e+t,s=!1;break;case".":var n=/(\+|\*|\/|-)\d+$/;(e.indexOf(".")==-1||n.test(e))&&(r=e+t);break;case"+":case"/":case"*":e.indexOf("+")!=e.length-1&&e.indexOf("-")!=e.length-1&&e.indexOf("/")!=e.length-1&&e.indexOf("*")!=e.length-1&&(r=e+t),s=!1;break;case"-":var c=e.substr(e.length-2,e.length);/[-\+\/\*]{2}/.test(c)||(r=e+t),s=!1;break;case"Delete":r=e.substr(0,e.length-1);break;case"AC":case"c":r="";break;case"=":case"Enter":strExpression=e,r=a(strExpression),strExpression!==r&&(s=!0)}return r}function a(e){var t=0,a=e.split(/[-\+\*\/]+/),s=e.split(/[^-\+\*\/]+/);if("-"==s.shift()&&(a.shift(),a[0]=parseFloat(a[0])*-1),s.pop(),0==s.length)return e;for(var r=0;r<s.length;r++){var n=1;2==s[r].length&&"-"==s[r][1]&&(n=-1,s[r]=s[r][0]);var c=parseFloat(a[r]),l=parseFloat(a[r+1])*n;switch(s[r]){case"+":t=c+l;break;case"-":t=c-l;break;case"*":t=c*l;break;case"/":t=c/l}a[r+1]=t}return Number.isInteger(t)?t:t.toFixed(3)}for(var s=!1,r=function(e){var a=document.querySelector(".input"),s=a.value;a.value=t(s,this.innerText)},n=document.querySelectorAll("button"),c=0;c<n.length;c++)n[c].onclick=r;document.onkeypress=function(e){e.preventDefault();var a=document.querySelector(".input"),s=a.value;a.value=t(s,e.key),a.scrollLeft=a.scrollWidth}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
